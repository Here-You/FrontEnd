name: DEV CI

on:

  push:
    branches:
      - develop
    tags:
      - 'development-**'

jobs:
  Deploy:
    runs-on: ubuntu-latest

    steps:
	
      - name: Checkout source code
        uses: actions/checkout@v3
			

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
			
		
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install
				
      - name: Build
        run: yarn build
        
        

- name: Generate Environment Variables File for Production
        run: |
          echo "VITE_NODE_ENV=$RVITE_NODE_ENV" >> .env.production
          echo "VITE_API_URL=$VITE_API_URL" >> .env.production
          echo "VITE_GOOGLE_MAP_API=$VITE_GOOGLE_MAP_API" >> .env.production
          echo " VITE_GOOGLE_AUTH_CLIENT_ID=$ VITE_GOOGLE_AUTH_CLIENT_ID" >> .env.production
          echo "VITE_KAKAO_REST_API_KEAY=$VITE_KAKAO_REST_API_KEAY" >> .env.production
          echo "VITE_REDIRECT_URI=$VITE_REDIRECT_URI" >> .env.production
        env:
         VITE_NODE_ENV: ${{ secrets.VITE_NODE_ENV }}
          VITE_API_URL: ${{ secrets.VITE_API_URL }}
       VITE_GOOGLE_MAP_API: ${{ secrets.VITE_GOOGLE_MAP_API }}
          VITE_GOOGLE_AUTH_CLIENT_ID: ${{ secrets.VITE_GOOGLE_AUTH_CLIENT_ID }}
          VITE_KAKAO_REST_API_KEAY: ${{ secrets.VITE_KAKAO_REST_API_KEAY }}
          VITE_REDIRECT_URI: ${{ secrets.VITE_REDIRECT_URI }}
			
			
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

   
      - name: Deploy to S3
        run: aws s3 sync ./build s3://${{ secrets.AWS_BUCKET_NAME }} --delete

		
      - name: Invalidate CloudFront Cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_DISTRIBUTION_ID }} --paths "/*"
